FROM webdevops/php-nginx:8.2-alpine

ENV WEB_DOCUMENT_ROOT=/app/public

WORKDIR /app

RUN apk add --update npm

RUN apk add --update mysql mysql-client && rm -f /var/cache/apk/*

COPY . .

RUN npm install && npm run build

RUN composer install --no-interaction --optimize-autoloader --no-dev

RUN cp .env.example .env

RUN --mount=type=secret,id=AWS_RDS_ENDPOINT \
    --mount=type=secret,id=AWS_RDS_DB \
    --mount=type=secret,id=AWS_RDS_USER \
    --mount=type=secret,id=AWS_RDS_PASSWORD \
    export DB_HOST=$(cat /run/secrets/AWS_RDS_ENDPOINT) && \
    export DB_DATABASE=$(cat /run/secrets/AWS_RDS_DB) && \
    export DB_USERNAME=$(cat /run/secrets/AWS_RDS_USER) && \
    export DB_PASSWORD=$(cat /run/secrets/AWS_RDS_PASSWORD) && \
    sed -i~ "/^DB_HOST=/s/=.*/=${DB_HOST}/" .env && \
    sed -i~ "/^DB_DATABASE=/s/=.*/=${DB_DATABASE}/" .env && \
    sed -i~ "/^DB_USERNAME=/s/=.*/=${DB_USERNAME}/" .env && \
    sed -i~ "/^DB_PASSWORD=/s/=.*/=${DB_PASSWORD}/" .env

RUN php artisan key:generate

RUN php artisan optimize

RUN php artisan config:clear

RUN chown -R application:application .

RUN chmod +x docker-entrypoint.sh

ENTRYPOINT ["./docker-entrypoint.sh"]